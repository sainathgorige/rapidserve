{"uuid": "dcbad0ab-0903-466e-bda1-64ce6259671c", "counter": 24, "stdout": "\u001b[0;33mchanged: [192.168.38.8] => (item=sh_in_S1) => {\"ansible_loop_var\": \"item\", \"changed\": true, \"cmd\": \"set -x\\nshort_name_prefix=\\\"$(echo 'sh_in_container1' | cut -c1-8)\\\"\\nshort_name_suffix=\\\"$(echo 'sh_in_container1' | rev | cut -c1-2 | rev)\\\"\\nshort_name=\\\"${short_name_prefix}_${short_name_suffix}\\\"\\n#short_name=\\\"$(echo 'sh_in_container1' | cut -c1-8)_$(echo 'sh_in_container1' | rev | cut -c1-2 | rev)\\\"\\n# Create veth pair for bridge\\nip link add ${short_name} type veth peer name v_${short_name}\\n# Bring up veth peer in host namespace for bridge\\nip link set v_${short_name} up\\n# Attach veth interface to the bridge\\nip link set v_${short_name} master sh_in_S1_br\\n# Assign container network interface to veth\\nip link set ${short_name} netns 'sh_in_container1'\\n# Bring up container network interface in container namespace for bridge\\nip netns exec 'sh_in_container1' ip link set ${short_name} up\\n# Start dhclient on container interface (Optional based on setup)\\ndocker exec 'sh_in_container1' dhclient ${short_name}\\n\", \"delta\": \"0:00:03.241301\", \"end\": \"2024-04-26 01:26:41.032208\", \"failed_when_result\": false, \"item\": \"sh_in_S1\", \"msg\": \"\", \"rc\": 0, \"start\": \"2024-04-26 01:26:37.790907\", \"stderr\": \"+ echo sh_in_container1\\n+ cut -c1-8\\n+ short_name_prefix=sh_in_co\\n+ echo sh_in_container1\\n+ rev\\n+ cut -c1-2\\n+ rev\\n+ short_name_suffix=r1\\n+ short_name=sh_in_co_r1\\n+ ip link add sh_in_co_r1 type veth peer name v_sh_in_co_r1\\n+ ip link set v_sh_in_co_r1 up\\n+ ip link set v_sh_in_co_r1 master sh_in_S1_br\\n+ ip link set sh_in_co_r1 netns sh_in_container1\\n+ ip netns exec sh_in_container1 ip link set sh_in_co_r1 up\\n+ docker exec sh_in_container1 dhclient sh_in_co_r1\", \"stderr_lines\": [\"+ echo sh_in_container1\", \"+ cut -c1-8\", \"+ short_name_prefix=sh_in_co\", \"+ echo sh_in_container1\", \"+ rev\", \"+ cut -c1-2\", \"+ rev\", \"+ short_name_suffix=r1\", \"+ short_name=sh_in_co_r1\", \"+ ip link add sh_in_co_r1 type veth peer name v_sh_in_co_r1\", \"+ ip link set v_sh_in_co_r1 up\", \"+ ip link set v_sh_in_co_r1 master sh_in_S1_br\", \"+ ip link set sh_in_co_r1 netns sh_in_container1\", \"+ ip netns exec sh_in_container1 ip link set sh_in_co_r1 up\", \"+ docker exec sh_in_container1 dhclient sh_in_co_r1\"], \"stdout\": \"\", \"stdout_lines\": []}\u001b[0m", "start_line": 23, "end_line": 24, "runner_ident": "6f9b41b8-82b0-49e1-ad16-8ec99a5291b1", "event": "runner_item_on_ok", "pid": 1210592, "created": "2024-04-26T01:26:41.119039", "parent_uuid": "52540038-3809-91cc-908c-00000000000a", "event_data": {"playbook": "/home/vmadm/demo/RapidServe/southbound/deploy_con.yaml", "playbook_uuid": "c4406447-6ca0-4858-8737-6cac801637b9", "play": "Deploy Infrastructure with Docker Containers for Edge and Origin Servers", "play_uuid": "52540038-3809-91cc-908c-000000000002", "play_pattern": "hostvms", "task": "Configure network interfaces and veth pairs", "task_uuid": "52540038-3809-91cc-908c-00000000000a", "task_action": "shell", "resolved_action": "ansible.builtin.shell", "task_args": "", "task_path": "/home/vmadm/demo/RapidServe/southbound/deploy_con.yaml:77", "host": "192.168.38.8", "res": {"changed": true, "stdout": "", "stderr": "+ echo sh_in_container1\n+ cut -c1-8\n+ short_name_prefix=sh_in_co\n+ echo sh_in_container1\n+ rev\n+ cut -c1-2\n+ rev\n+ short_name_suffix=r1\n+ short_name=sh_in_co_r1\n+ ip link add sh_in_co_r1 type veth peer name v_sh_in_co_r1\n+ ip link set v_sh_in_co_r1 up\n+ ip link set v_sh_in_co_r1 master sh_in_S1_br\n+ ip link set sh_in_co_r1 netns sh_in_container1\n+ ip netns exec sh_in_container1 ip link set sh_in_co_r1 up\n+ docker exec sh_in_container1 dhclient sh_in_co_r1", "rc": 0, "cmd": "set -x\nshort_name_prefix=\"$(echo 'sh_in_container1' | cut -c1-8)\"\nshort_name_suffix=\"$(echo 'sh_in_container1' | rev | cut -c1-2 | rev)\"\nshort_name=\"${short_name_prefix}_${short_name_suffix}\"\n#short_name=\"$(echo 'sh_in_container1' | cut -c1-8)_$(echo 'sh_in_container1' | rev | cut -c1-2 | rev)\"\n# Create veth pair for bridge\nip link add ${short_name} type veth peer name v_${short_name}\n# Bring up veth peer in host namespace for bridge\nip link set v_${short_name} up\n# Attach veth interface to the bridge\nip link set v_${short_name} master sh_in_S1_br\n# Assign container network interface to veth\nip link set ${short_name} netns 'sh_in_container1'\n# Bring up container network interface in container namespace for bridge\nip netns exec 'sh_in_container1' ip link set ${short_name} up\n# Start dhclient on container interface (Optional based on setup)\ndocker exec 'sh_in_container1' dhclient ${short_name}\n", "start": "2024-04-26 01:26:37.790907", "end": "2024-04-26 01:26:41.032208", "delta": "0:00:03.241301", "msg": "", "invocation": {"module_args": {"_raw_params": "set -x\nshort_name_prefix=\"$(echo 'sh_in_container1' | cut -c1-8)\"\nshort_name_suffix=\"$(echo 'sh_in_container1' | rev | cut -c1-2 | rev)\"\nshort_name=\"${short_name_prefix}_${short_name_suffix}\"\n#short_name=\"$(echo 'sh_in_container1' | cut -c1-8)_$(echo 'sh_in_container1' | rev | cut -c1-2 | rev)\"\n# Create veth pair for bridge\nip link add ${short_name} type veth peer name v_${short_name}\n# Bring up veth peer in host namespace for bridge\nip link set v_${short_name} up\n# Attach veth interface to the bridge\nip link set v_${short_name} master sh_in_S1_br\n# Assign container network interface to veth\nip link set ${short_name} netns 'sh_in_container1'\n# Bring up container network interface in container namespace for bridge\nip netns exec 'sh_in_container1' ip link set ${short_name} up\n# Start dhclient on container interface (Optional based on setup)\ndocker exec 'sh_in_container1' dhclient ${short_name}\n", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": [], "stderr_lines": ["+ echo sh_in_container1", "+ cut -c1-8", "+ short_name_prefix=sh_in_co", "+ echo sh_in_container1", "+ rev", "+ cut -c1-2", "+ rev", "+ short_name_suffix=r1", "+ short_name=sh_in_co_r1", "+ ip link add sh_in_co_r1 type veth peer name v_sh_in_co_r1", "+ ip link set v_sh_in_co_r1 up", "+ ip link set v_sh_in_co_r1 master sh_in_S1_br", "+ ip link set sh_in_co_r1 netns sh_in_container1", "+ ip netns exec sh_in_container1 ip link set sh_in_co_r1 up", "+ docker exec sh_in_container1 dhclient sh_in_co_r1"], "_ansible_no_log": null, "failed_when_result": false, "item": "sh_in_S1", "ansible_loop_var": "item", "_ansible_item_label": "sh_in_S1"}, "uuid": "dcbad0ab-0903-466e-bda1-64ce6259671c"}}