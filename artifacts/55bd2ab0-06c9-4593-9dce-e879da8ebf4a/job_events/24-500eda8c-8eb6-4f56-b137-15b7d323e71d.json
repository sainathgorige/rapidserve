{"uuid": "500eda8c-8eb6-4f56-b137-15b7d323e71d", "counter": 24, "stdout": "\u001b[0;33mchanged: [192.168.38.8] => {\"changed\": true, \"cmd\": \"for subnet in ['ho_in_S1', 'ho_in_S2']\\ndo\\n  # Extract parts of the container name\\n  short_name=$(echo \\\"ho_in_container1\\\" | cut -c1-6)$(echo \\\"ho_in_container1\\\" | rev | cut -c1-2 | rev)\\n\\n  # Create veth pair for bridge\\n  ip link add ${short_name} type veth peer name v_${short_name}\\n\\n  # Bring up veth peer in host namespace for bridge\\n  ip link set v_${short_name} up\\n\\n  # Attach veth interface to the bridge\\n  ip link set v_${short_name} master ${subnet}_br\\n\\n  # Assign container network interface to veth\\n  ip link set ${short_name} netns ho_in_container1\\n\\n  # Bring up container network interface in container namespace for bridge\\n  ip netns exec ho_in_container1 ip link set ${short_name} up\\n\\n  # Start dhclient on container interface (Optional based on setup)\\n  docker exec ho_in_container1 dhclient ${short_name}\\ndone\\n\", \"delta\": \"0:02:02.389458\", \"end\": \"2024-04-24 01:35:01.481726\", \"failed_when_result\": false, \"msg\": \"\", \"rc\": 0, \"start\": \"2024-04-24 01:32:59.092268\", \"stderr\": \"Error: argument \\\"[ho_in_S1,_br\\\" is wrong: Device does not exist\\n\\nRTNETLINK answers: File exists\\nError: argument \\\"ho_in_S2]_br\\\" is wrong: Device does not exist\\n\\nCannot find device \\\"ho_in_r1\\\"\", \"stderr_lines\": [\"Error: argument \\\"[ho_in_S1,_br\\\" is wrong: Device does not exist\", \"\", \"RTNETLINK answers: File exists\", \"Error: argument \\\"ho_in_S2]_br\\\" is wrong: Device does not exist\", \"\", \"Cannot find device \\\"ho_in_r1\\\"\"], \"stdout\": \"\", \"stdout_lines\": []}\u001b[0m", "start_line": 23, "end_line": 24, "runner_ident": "55bd2ab0-06c9-4593-9dce-e879da8ebf4a", "event": "runner_on_ok", "pid": 247108, "created": "2024-04-24T01:35:01.566763", "parent_uuid": "52540038-3809-c6ec-02f8-00000000000a", "event_data": {"playbook": "/home/vmadm/demo/RapidServe/southbound/deploy_con.yaml", "playbook_uuid": "e5cab265-b561-448b-a753-00ad747ffbb8", "play": "Deploy Infrastructure with Docker Containers for Edge and Origin Servers", "play_uuid": "52540038-3809-c6ec-02f8-000000000002", "play_pattern": "hostvms", "task": "Configure network interfaces and veth pairs", "task_uuid": "52540038-3809-c6ec-02f8-00000000000a", "task_action": "shell", "resolved_action": "ansible.builtin.shell", "task_args": "", "task_path": "/home/vmadm/demo/RapidServe/southbound/deploy_con.yaml:77", "host": "192.168.38.8", "remote_addr": "192.168.38.8", "res": {"changed": true, "stdout": "", "stderr": "Error: argument \"[ho_in_S1,_br\" is wrong: Device does not exist\n\nRTNETLINK answers: File exists\nError: argument \"ho_in_S2]_br\" is wrong: Device does not exist\n\nCannot find device \"ho_in_r1\"", "rc": 0, "cmd": "for subnet in ['ho_in_S1', 'ho_in_S2']\ndo\n  # Extract parts of the container name\n  short_name=$(echo \"ho_in_container1\" | cut -c1-6)$(echo \"ho_in_container1\" | rev | cut -c1-2 | rev)\n\n  # Create veth pair for bridge\n  ip link add ${short_name} type veth peer name v_${short_name}\n\n  # Bring up veth peer in host namespace for bridge\n  ip link set v_${short_name} up\n\n  # Attach veth interface to the bridge\n  ip link set v_${short_name} master ${subnet}_br\n\n  # Assign container network interface to veth\n  ip link set ${short_name} netns ho_in_container1\n\n  # Bring up container network interface in container namespace for bridge\n  ip netns exec ho_in_container1 ip link set ${short_name} up\n\n  # Start dhclient on container interface (Optional based on setup)\n  docker exec ho_in_container1 dhclient ${short_name}\ndone\n", "start": "2024-04-24 01:32:59.092268", "end": "2024-04-24 01:35:01.481726", "delta": "0:02:02.389458", "msg": "", "invocation": {"module_args": {"_raw_params": "for subnet in ['ho_in_S1', 'ho_in_S2']\ndo\n  # Extract parts of the container name\n  short_name=$(echo \"ho_in_container1\" | cut -c1-6)$(echo \"ho_in_container1\" | rev | cut -c1-2 | rev)\n\n  # Create veth pair for bridge\n  ip link add ${short_name} type veth peer name v_${short_name}\n\n  # Bring up veth peer in host namespace for bridge\n  ip link set v_${short_name} up\n\n  # Attach veth interface to the bridge\n  ip link set v_${short_name} master ${subnet}_br\n\n  # Assign container network interface to veth\n  ip link set ${short_name} netns ho_in_container1\n\n  # Bring up container network interface in container namespace for bridge\n  ip netns exec ho_in_container1 ip link set ${short_name} up\n\n  # Start dhclient on container interface (Optional based on setup)\n  docker exec ho_in_container1 dhclient ${short_name}\ndone\n", "_uses_shell": true, "stdin_add_newline": true, "strip_empty_ends": true, "argv": null, "chdir": null, "executable": null, "creates": null, "removes": null, "stdin": null}}, "stdout_lines": [], "stderr_lines": ["Error: argument \"[ho_in_S1,_br\" is wrong: Device does not exist", "", "RTNETLINK answers: File exists", "Error: argument \"ho_in_S2]_br\" is wrong: Device does not exist", "", "Cannot find device \"ho_in_r1\""], "_ansible_no_log": null, "failed_when_result": false}, "start": "2024-04-24T01:32:58.668711", "end": "2024-04-24T01:35:01.566196", "duration": 122.897485, "event_loop": null, "uuid": "500eda8c-8eb6-4f56-b137-15b7d323e71d"}}